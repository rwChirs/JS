
1、开始说明：
可以把前端网站设置3000，后端网站设置3001；也可以通过路径

我们要用路由来做
home前台的，admin后台的

2、有公共部分怎么办？模板布局是什么？
抽离公共部分，把其叫成模板layout，其他部分可以继承模板


3、通过 express.Router(); 创建主路由
主路由.get/post创建子路由


4、前台页面的公共部分有的页面不能用，所以再公共一个公共页面
index 继承 layout 继承 base


5、引入的模块太多，而且发给别人的时候还要带node_modules文件，很不方便
所以用包描述文件
npm init    （名字首字母不能包含大写字母）

npm install mysql --save(保存)

也就是说，有一天我删除了node_modules文件，但包描述文件记录好了，再次安装就用 npm install（或者npm i） 即可

npm i gulp --save-dev

总结：dependencies必须依赖的   用--save
    devDependencies开发阶段才用的  用--save-dev


6、MVE 一种开发模式
Model View Controller

Model（模型）操作数据的      与数据相关逻辑
View（视图）数据页面呈现      视图相关逻辑
Controller（控制器）把用户的数据展示到用户的视图上  与请求响应相关的逻辑
    用户都是访问C，让其他两个为它服务

models是m
views是v
routes其实就是c

user.js专门用来操作用户的数据


7、表单提交数据（不刷新页面）使用ajax



8、联调环节：先写好地址，然后发送一个请求，服务器有数据，说明接口通了；
都是js
浏览器端执行的ajax 是前端人员去写
home.js的地址 是后端人员去写
所以先要保证接口是通的

由后端人员写一个 地址接口如home.post('/register', (req, res) => {res.send('111');}
    如果通了会返回给浏览器111
前端人员 书写ajax$.ajax({url: '/register',type: 'post'...
    

9、项目的迭代：在原来写的功能上加新功能，这个过程叫迭代，其实就是改动  



10、node也可以使用 session
用中间件解决 express-session模块

1.检测用户名和密码正确后，记录一个 session 值
服务器会响应一个结果，通知 浏览器设置一个cookie

2.再用新的请求 cookie 会被带到服务端，
然后服务器通过这个 cookie 可以找到对应的 session


清除cookie后应该访问不了主页，所以要判断检测
有则登录，没有则跳转到登录页
除了登录页本身，其他都要去检测，用中间件模块



11、为什么不让自动重启调试？
在nodejs中 默认情况下 session 是放到内存当中的，
重启就消失了，再次启动就没有了
所以当服务器重启后 session 也会消失

所在做登录的时候要手动重启，经过验证没有问题，再回复自动重启



12、退出登录用链接即可
















